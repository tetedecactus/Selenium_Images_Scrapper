#! /usr/bin/env python3

#https://www.selenium.dev/documentation/webdriver/browsers/chrome/
#https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.chrome.webdriver
#https://python.plainenglish.io/web-scraping-images-with-python-and-selenium-792e452abd70
#https://www.analyticsvidhya.com/blog/2020/08/web-scraping-selenium-with-python/
#https://www.geeksforgeeks.org/image-scraping-with-python/
#https://www.projectpro.io/article/python-libraries-for-web-scraping/625#mcetoc_1gb5hj7o818

import sys
import subprocess
import platform
import os
import time

# import requests 
# from bs4 import BeautifulSoup
# from selenium import webdriver
# from selenium.webdriver.common.by import By
# import urllib
# from urllib.request import urlopen
# import urllib.parse as urlparse

from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.firefox.webdriver import WebDriver

# Chek argv -> ,.spider https://{LINK} -[rpg]
if len(sys.argv) != 2:
    print("Program Must be launch by : ./spider https://[YOURLINK]")
    exit()
else:
    URL = sys.argv[1]

# Script to check the User OS
def get_usr_os():
    system = platform.system()

    if system == "Windows":
        return "Windows"
    elif system == "Darwin":
        return "Mac"
    elif system == "Linux":
        return "Linux"
    else:
        print("Unknown OS: Program must by launch by: [Windows || MacOS || Linux]")
        exit()
        # return "Unknown OS"

usr_os = get_usr_os()
# print("User OS: ", user_os)

# Chek OS and default web browser
def get_user_dependecie():
    if usr_os == "Linux":
        if get_default_browser_linux() != "Chrome":
            selenium_chrome()
        # elif get_default_browser_linux() == "brave-browser.desktop":
        #     selenium_brave()
        else:
            selenium_chrome()
        # return get_default_browser_linux()
    elif usr_os == "Mac":
        # if get_default_browser_macos() == "Chrome":
        # selenium_mac_chrome()
        return get_default_browser_macos()
    elif usr_os == "Windows":
        # if get_default_browser_windows() == "Chrome":
        # selenium_windows_chrome()
        return get_default_browser_windows
    else:
        return None

# Check Windows default web browser
def get_default_browser_windows():
    try:
        import winreg
    except ImportError:
        return None

    # PATH to default web browser
    reg_path = r"SOFTWARE\Microsoft\Windows\Shell\Associations\UrlAssociations\http\UserChoice"

    try:
        with winreg.OpenKey(winreg.HKEY_CURRENT_USER, reg_path) as key:
            prog_id, _ = winreg.QueryValueEx(key, "Progid")
            return prog_id
    except Exception:
        return None

# default_browser = get_default_browser_windows()
# print("Windows default web browser:", default_browser)

# Check MacOS default web browser
def get_default_browser_macos():
    try:
        output =  subprocess.check_ouput(["default", "read", "-g", "com.apple.LaunchServices/com.apple.launchservices.secure"])
        output_str = output.decode("utf-8")
        browser_bundle_id = output_str.split('"LSHandlerRoleAll" = "')[1].split('";')[0]
        return browser_bundle_id
    except Exception:
        return None

# default_browser = get_default_browser_macos()
# print("MacOS default web browser:", default_browser)

# Check Linux default web browser
def get_default_browser_linux():
    try:
        output = subprocess.check_output(["xdg-settings", "get", "default-web-browser"])
        browser_desktop_file = output.decode("utf-8").strip()
        return browser_desktop_file
    except Exception:
        return None

# default_browser = get_default_browser_linux()
# print("Linux default web browser:", default_browser)


# must do a default function to make chrome and chromedriver, who could be change 
default_dependencies = ["Chrome", "ChromeDriver"]
# default_dependencies = ["Brave", "ChromeDriver"]
# default_dependencies = ["Firefox", "Geckodriver"]
# default_dependencies = ["Edge", "EdgeDriver"]
# default_dependencies = ["Chrome", "Chromedriver"]


# ============ SELENIUM USING LINUX ============================
# Script for the images scrapper using: Selenium | Linux | Chrome | Chromedriver by default

# Launch with Chrome web browser
def selenium_chrome():
    PATH_chromedriver = "/usr/bin/chromedriver"
    chrome_service = Service(executable_path=PATH_chromedriver)
    chrome_options = webdriver.ChromeOptions()
    chrome_driver = webdriver.Chrome(service=chrome_service, options=chrome_options)
    chrome_driver = webdriver.Chrome()
    chrome_driver.get(URL)
    chrome_driver.quit()

# Launch with Firefox web browser
# def selenium_firefox():
#     PATH_firefoxdriver = "/usr/bin/geckodriver"
#     firefox_service = Service(executable_path=PATH_firefoxdriver)
#     firefox_options = webdriver.FirefoxOptions()
#     firefox_driver = webdriver.Firefox(service=firefox_service, options=firefox_options)
#     firefox_driver.get(URL)
#     firefox_driver.quit()

#Launch with Brave web browser
# def selenium_brave():
#     PATH_brave = "/usr/bin/brave-browser"
#     PATH_bravedriver = "/usr/bin/chromedriver"
#     brave_service = Service(executable_path=PATH_bravedriver)
#     brave_option = webdriver.ChromeOptions()
#     brave_option.binary_location = PATH_brave
#     brave_driver = webdriver.Chrome(service=brave_service, options=brave_option)
#     brave_driver.get(URL)
#     brave_driver.quit()

# Launch with Opera web browser
# def selenium_opera():
    # PATH_opera = "/var/lib/snapd/snap/bin/opera"
    # PATH_operadriver = "/usr/bin/chromedriver"
    # # PATH_operadriver = "/usr/bin/operadriver/operadriver_linux64"
    # opera_service = Service(executable_path=PATH_operadriver)
    # opera_option = webdriver.ChromeOptions()
    # # opera_option = webdriver.OperaOptions()
    # opera_option.binary_location = PATH_opera
    # opera_driver = webdriver.Chrome(service=opera_service, options=opera_option)
    # # opera_driver = webdriver.Opera(service=opera_service, options=opera_option)
    # # opera_driver = webdriver.Chrome(options=opera_option)
    # opera_driver.get(URL)
    # opera_driver.quit()

# Launch with Microsoft Edge web browser
# def selenium_edge():
#     PATH_edge = "/usr/bin/microsoft-edge"
#     PATH_edgedriver = "/usr/bin/edgedriver"
#     edge_service = Service(executable_path=PATH_edgedriver)
#     edge_option = webdriver.EdgeOptions()
#     edge_option.binary_location = PATH_edge
#     edge_driver = webdriver.Edge(service=edge_service, options=edge_option)
#     edge_driver.get(URL)
#     edge_driver.quit()

# /--------------------------------------------------

# /============== SELENIUM USING MACOS ==============================
# /===================================================

# /============== SELENIUM USING WINDOWS ============================
# /===================================================

get_user_dependecie()